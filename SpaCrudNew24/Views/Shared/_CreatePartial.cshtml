@model SpaCrudNew24.ViewModels.StudentViewModel
<div class="modal-header">
    <h5 class="modal-title">Student Informtaion</h5>
</div>
<div class="modal-body">
    @using (Html.BeginForm("CreateStudent", "Students", FormMethod.Post, new { id = "createStudentForm", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new {@class="text-danger"})

    <div class="row">
        <div class="col-md-7">
            <div class="form-group mb-2">
                @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-3" })
                @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-2">
                @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-3" })
                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-2">
                @Html.LabelFor(model => model.RegFee, htmlAttributes: new { @class = "control-label col-md-3" })
                @Html.EditorFor(model => model.RegFee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RegFee, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-2">
                @Html.LabelFor(model => model.AdmissionDate, htmlAttributes: new { @class = "control-label col-md-3" })
                @Html.EditorFor(model => model.AdmissionDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdmissionDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-2">
                @Html.LabelFor(model => model.IsEnrolled, htmlAttributes: new { @class = "control-label col-md-3" })
                @Html.EditorFor(model => model.IsEnrolled)
                @Html.ValidationMessageFor(model => model.IsEnrolled, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-2">
                @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-3" })
                @Html.DropDownListFor(model => model.CourseId, new SelectList(Model.Courses, "CourseId", "CourseName"), "Select Course", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-2">
                <img id="imageFile" src="~/images/noimage.png" width="100" /><br />
                @Html.LabelFor(model => model.ProfileFile, htmlAttributes: new { @class = "control-label col-md-3" })
                <input onchange="readUrl(this)" type="file" id="ProfileFile" name="ProfileFile" class="invisible" />
            </div>
        </div>
        <div class="col-md-4">
            <button onclick="AddModule()" class="btn btn-primary" type="button">Add Modules</button>
            @Html.Partial("_AddModule",Model.CourseModules)
        </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-success">Create Student</button>
        </div>
        }
    </div>
<script src="~/Scripts/jquery-3.7.1.min.js"></script>
<script>
    function readUrl(i)
    {
        if (i.files && i.files[0])
        {
            var reader = new FileReader();
            reader.onload = function (e)
            {
                $("#imageFile").attr('src',e.target.result)
            }
            reader.readAsDataURL(i.files[0])
        }
    }
    function deleteRow(btn)
    {
        $(btn).closest('tr').remove();
    }

    function AddModule() {
        var lastIndex = parseInt($('#HIndex').val());
        var newRow = `
    <tr>
        <td>
            <input type="text" value="" class="form-control" name="CourseModules[${lastIndex}].ModuleName" />
        </td>
        <td>
            <input type="text" value="" class="form-control" name="CourseModules[${lastIndex}].Duration" />
        </td>
        <td>
            <button onclick="deletewRow(this)" type="button" class="btn btn-danger">Delete</button>
        </td>
    </tr>
    `
        $("#ExTable tbody").append(newRow);
        $('#HIndex').val(lastIndex + 1);
    }
</script>